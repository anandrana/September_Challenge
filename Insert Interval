import bisect

class Solution:
    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:
        bisect.insort(intervals,newInterval)
        print(intervals)
        i=1
        ans=[]
        flag=0
        if(len(intervals)==1):
            return intervals
        while(i<len(intervals)):
            if(intervals[i-1][1]<intervals[i][0]):
                ans.append(intervals[i-1])
                i+=1
                flag=1
            else:
                flag=0
                x=intervals[i-1][0]
                # y=intervals[i-1][1]
                y=max(intervals[i-1][1],intervals[i][1])
                if(intervals[i-1][1]>intervals[i][1]):
                    j=i-1
                else:
                    j=i
                
                i+=1
                while(i<len(intervals)):
                    if(intervals[j][1]>intervals[i][1]):
                        i+=1
                    elif(intervals[j][1]>=intervals[i][0]):
                        y=intervals[i][1]
                        i+=1
                        break
                    else:
                        y=intervals[j][1]
                        break
                ans.append([x,y])
                ans.extend(intervals[i:])
                break
        if(flag==1):
            ans.append(intervals[-1])
        return ans
    
                    
        
