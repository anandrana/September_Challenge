class Solution:
    def largestTimeFromDigits(self, A: List[int]) -> str:
        x=min(A)
        if(x>2):
            return ''
        list1=[]
        
        def permu(A,l,r):
            if(l==r):
                a=A[:]
                if(a[0]<3):
                    if a not in list1:
                        list1.append(a)
            for i in range(l,r+1):
                A[l],A[i]=A[i],A[l]
                permu(A,l+1,r)
                A[l],A[i]=A[i],A[l]
                
        permu(A,0,3)
        
        # print(list1)
        list1.sort()
        # print(list1)
        x=(-1,-1,-1,-1)
        y=x
        for i in range(len(list1)):
            if(list1[i][0]==0 and list1[i][1]<=9 and list1[i][2]<=5):
                x=(list1[i][0],list1[i][1],list1[i][2],list1[i][3])
            elif(list1[i][0]==1 and list1[i][1]<=9 and list1[i][2]<=5):
                x=(list1[i][0],list1[i][1],list1[i][2],list1[i][3])
            elif(list1[i][0]==2 and list1[i][1]<=3 and list1[i][2]<=5):
                x=(list1[i][0],list1[i][1],list1[i][2],list1[i][3])
        # print(x)
        if(x==y):
            return ''
        else:
            return str(x[0])+str(x[1])+':'+str(x[2])+str(x[3])
        
        
